#ifndef JEU_H
#define JEU_H

#include <QObject>
#include <QList>

#include <iostream>
using namespace std;

#include<QColor>

class jeu : public QObject
{
    Q_OBJECT
public:
    explicit jeu(QObject *parent = 0);
    Q_INVOKABLE void Init(QString value="#000000");
    Q_INVOKABLE void test_victoire(); // change l'attribu victoire en 1 si victoire du joueur 1 et en 2 si victoire du joueur 2

    Q_PROPERTY(QList<QString> states READ readStates NOTIFY statesChanged);

    QList<QString> readStates();

    Q_INVOKABLE void changement(int j);
    Q_INVOKABLE int get_victoire();  // renvoi l'attribu victoire
    Q_INVOKABLE void nouvelle_partie();  // appelé quand on appui sur le bouton nouvelle partie : remet les cases en noirs, la victoire à 0, et le compteur de tours à 0

signals:
    void statesChanged();   // signal pour mettre à jour MainForm

public slots:

private:
    QList<QString> D;
    int C;
    int victoire=0; // attribu pour est-ce qu'il y a victoire, et de qui
};

#endif // JEU_H
